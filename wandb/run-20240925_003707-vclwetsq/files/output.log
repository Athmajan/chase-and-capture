Prediction Accuracy = 23.309999999999995%, Running Loss = 29.63090524673462
Prediction Accuracy = 23.384000000000004%, Running Loss = 11.188764381408692
Prediction Accuracy = 25.377999999999997%, Running Loss = 8.933974504470825
Prediction Accuracy = 25.345999999999997%, Running Loss = 7.034461498260498
Prediction Accuracy = 27.695999999999998%, Running Loss = 6.255943298339844
Prediction Accuracy = 28.818%, Running Loss = 5.926907157897949
Prediction Accuracy = 32.123999999999995%, Running Loss = 5.852806949615479
Prediction Accuracy = 32.14%, Running Loss = 5.769865417480469
Prediction Accuracy = 33.501999999999995%, Running Loss = 5.736393451690674
Prediction Accuracy = 34.062%, Running Loss = 5.719281959533691
Prediction Accuracy = 34.938%, Running Loss = 5.702294445037841
Prediction Accuracy = 35.013999999999996%, Running Loss = 5.69179253578186
Prediction Accuracy = 35.86200000000001%, Running Loss = 5.687821722030639
Prediction Accuracy = 36.077999999999996%, Running Loss = 5.6849854469299315
Prediction Accuracy = 36.392%, Running Loss = 5.681353569030762
Prediction Accuracy = 37.04200000000001%, Running Loss = 5.678127813339233
Prediction Accuracy = 37.032%, Running Loss = 5.673945522308349
Prediction Accuracy = 37.709999999999994%, Running Loss = 5.674134540557861
Prediction Accuracy = 38.046%, Running Loss = 5.671256875991821
Prediction Accuracy = 38.136%, Running Loss = 5.668510150909424
Prediction Accuracy = 38.976000000000006%, Running Loss = 5.665257263183594
Prediction Accuracy = 39.132%, Running Loss = 5.662101316452026
Prediction Accuracy = 39.751999999999995%, Running Loss = 5.656909513473511
Prediction Accuracy = 40.122%, Running Loss = 5.6555219173431395
Prediction Accuracy = 40.574000000000005%, Running Loss = 5.656793069839478
Prediction Accuracy = 40.872%, Running Loss = 5.657517623901367
Prediction Accuracy = 41.114%, Running Loss = 5.653075790405273
Prediction Accuracy = 41.416%, Running Loss = 5.647999620437622
Prediction Accuracy = 41.654%, Running Loss = 5.646046447753906
Prediction Accuracy = 41.92399999999999%, Running Loss = 5.646520805358887
Prediction Accuracy = 41.940000000000005%, Running Loss = 5.645908975601197
Prediction Accuracy = 42.146%, Running Loss = 5.646803998947144
Prediction Accuracy = 42.338%, Running Loss = 5.645458602905274
Prediction Accuracy = 42.438%, Running Loss = 5.643100833892822
Prediction Accuracy = 42.574%, Running Loss = 5.645307016372681
Prediction Accuracy = 42.622%, Running Loss = 5.654123067855835
Prediction Accuracy = 42.512%, Running Loss = 5.651039409637451
Prediction Accuracy = 42.69799999999999%, Running Loss = 5.64586386680603
Prediction Accuracy = 42.58200000000001%, Running Loss = 5.643333387374878
Prediction Accuracy = 42.5%, Running Loss = 5.645129442214966
Prediction Accuracy = 42.64999999999999%, Running Loss = 5.642336893081665
Prediction Accuracy = 42.608%, Running Loss = 5.642765188217163
Prediction Accuracy = 42.732%, Running Loss = 5.64188437461853
Prediction Accuracy = 42.714%, Running Loss = 5.647703361511231
Prediction Accuracy = 42.812%, Running Loss = 5.649561977386474
Prediction Accuracy = 42.578%, Running Loss = 5.652798318862915
Prediction Accuracy = 42.568%, Running Loss = 5.64845552444458
Prediction Accuracy = 42.61%, Running Loss = 5.643963050842285
Prediction Accuracy = 42.611999999999995%, Running Loss = 5.6428674221038815
Prediction Accuracy = 42.67%, Running Loss = 5.669171380996704
Prediction Accuracy = 42.622%, Running Loss = 5.6530969619750975
Prediction Accuracy = 42.544%, Running Loss = 5.65258207321167
Prediction Accuracy = 42.65599999999999%, Running Loss = 5.643438816070557
Prediction Accuracy = 42.718%, Running Loss = 5.655556535720825
Prediction Accuracy = 42.678000000000004%, Running Loss = 5.660327577590943
Prediction Accuracy = 42.638%, Running Loss = 5.642457818984985
Prediction Accuracy = 42.78%, Running Loss = 5.646231079101563
Prediction Accuracy = 42.594%, Running Loss = 5.658642196655274
Prediction Accuracy = 42.702%, Running Loss = 5.643676996231079
Prediction Accuracy = 42.648%, Running Loss = 5.645551633834839
Prediction Accuracy = 42.588%, Running Loss = 5.645529651641846
Prediction Accuracy = 42.586%, Running Loss = 5.6430130958557125
Prediction Accuracy = 42.602000000000004%, Running Loss = 5.642185401916504
Prediction Accuracy = 42.688%, Running Loss = 5.642176675796509
Prediction Accuracy = 42.72%, Running Loss = 5.658301305770874
Prediction Accuracy = 42.72%, Running Loss = 5.658970832824707
Prediction Accuracy = 42.712%, Running Loss = 5.6464924812316895
Prediction Accuracy = 42.54%, Running Loss = 5.653152894973755
Prediction Accuracy = 42.43%, Running Loss = 5.659121656417847
Prediction Accuracy = 42.67%, Running Loss = 5.653184509277343
Prediction Accuracy = 42.684000000000005%, Running Loss = 5.646330642700195
Prediction Accuracy = 42.650000000000006%, Running Loss = 5.644894027709961
Prediction Accuracy = 42.605999999999995%, Running Loss = 5.643254280090332
Prediction Accuracy = 42.532000000000004%, Running Loss = 5.673519086837769
Prediction Accuracy = 42.6%, Running Loss = 5.654474878311158
Prediction Accuracy = 42.604%, Running Loss = 5.6470862865448
Prediction Accuracy = 42.646%, Running Loss = 5.6544732570648195
Prediction Accuracy = 42.678%, Running Loss = 5.6546735763549805
Prediction Accuracy = 42.646%, Running Loss = 5.662061357498169
Prediction Accuracy = 42.62%, Running Loss = 5.659859085083008
Prediction Accuracy = 42.605999999999995%, Running Loss = 5.643647003173828
Prediction Accuracy = 42.652%, Running Loss = 5.649232053756714
Prediction Accuracy = 42.589999999999996%, Running Loss = 5.643747329711914
Prediction Accuracy = 42.608000000000004%, Running Loss = 5.647395610809326
Prediction Accuracy = 42.688%, Running Loss = 5.657334899902343
Prediction Accuracy = 42.489999999999995%, Running Loss = 5.648432970046997
Prediction Accuracy = 42.47%, Running Loss = 5.653934907913208
Prediction Accuracy = 42.604%, Running Loss = 5.657081079483032
Prediction Accuracy = 42.66199999999999%, Running Loss = 5.68274827003479
Prediction Accuracy = 42.583999999999996%, Running Loss = 5.655751800537109
Prediction Accuracy = 42.660000000000004%, Running Loss = 5.644994449615479
Prediction Accuracy = 42.68%, Running Loss = 5.644350814819336
Prediction Accuracy = 42.632%, Running Loss = 5.649775743484497
Prediction Accuracy = 42.602%, Running Loss = 5.681546974182129
Prediction Accuracy = 42.586%, Running Loss = 5.65954098701477
Prediction Accuracy = 42.608000000000004%, Running Loss = 5.647888851165772
Prediction Accuracy = 42.676%, Running Loss = 5.658836317062378
Prediction Accuracy = 42.586%, Running Loss = 5.648002099990845
Prediction Accuracy = 42.608%, Running Loss = 5.647617435455322
Prediction Accuracy = 42.559999999999995%, Running Loss = 5.658454370498657
Prediction Accuracy = 42.668%, Running Loss = 5.658369302749634
Prediction Accuracy = 42.7%, Running Loss = 5.654282522201538
Prediction Accuracy = 42.571999999999996%, Running Loss = 5.672199058532715
Prediction Accuracy = 42.408%, Running Loss = 5.656168842315674
Prediction Accuracy = 42.418000000000006%, Running Loss = 5.643793296813965
Prediction Accuracy = 42.504%, Running Loss = 5.64610071182251
Prediction Accuracy = 42.63199999999999%, Running Loss = 5.660591697692871
Prediction Accuracy = 42.55800000000001%, Running Loss = 5.647343301773072
Prediction Accuracy = 42.715999999999994%, Running Loss = 5.644570636749267
Traceback (most recent call last):
  File "/Users/athmajanvivekananthan/WCE/JEPA - MARL/multi-agent/PPO/bert_marl/mode20-dqn/classify.py", line 82, in <module>
    for data in data_loader:
  File "/Users/athmajanvivekananthan/WCE/JEPA - MARL/multi-agent/bertsekas-marl/spider/lib/python3.11/site-packages/torch/utils/data/dataloader.py", line 634, in __next__
    data = self._next_data()
           ^^^^^^^^^^^^^^^^^
  File "/Users/athmajanvivekananthan/WCE/JEPA - MARL/multi-agent/bertsekas-marl/spider/lib/python3.11/site-packages/torch/utils/data/dataloader.py", line 678, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/athmajanvivekananthan/WCE/JEPA - MARL/multi-agent/bertsekas-marl/spider/lib/python3.11/site-packages/torch/utils/data/_utils/fetch.py", line 54, in fetch
    return self.collate_fn(data)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/athmajanvivekananthan/WCE/JEPA - MARL/multi-agent/bertsekas-marl/spider/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 264, in default_collate
    return collate(batch, collate_fn_map=default_collate_fn_map)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/athmajanvivekananthan/WCE/JEPA - MARL/multi-agent/bertsekas-marl/spider/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 142, in collate
    return [collate(samples, collate_fn_map=collate_fn_map) for samples in transposed]  # Backwards compatibility.
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/athmajanvivekananthan/WCE/JEPA - MARL/multi-agent/bertsekas-marl/spider/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 142, in <listcomp>
    return [collate(samples, collate_fn_map=collate_fn_map) for samples in transposed]  # Backwards compatibility.
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/athmajanvivekananthan/WCE/JEPA - MARL/multi-agent/bertsekas-marl/spider/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 119, in collate
    return collate_fn_map[elem_type](batch, collate_fn_map=collate_fn_map)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/athmajanvivekananthan/WCE/JEPA - MARL/multi-agent/bertsekas-marl/spider/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 171, in collate_numpy_array_fn
    return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/athmajanvivekananthan/WCE/JEPA - MARL/multi-agent/bertsekas-marl/spider/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 171, in <listcomp>
    return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
                    ^^^^^^^^^^^^^^^^^^
KeyboardInterrupt